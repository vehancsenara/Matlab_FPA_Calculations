# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yS_K-8OWZSOeQHD0W3WEAjX6AnTJSOPj
"""

from scipy.stats import t

# Degrees of freedom for a paired t-test is n - 1
df = 2068 - 1

# Critical t-value for a two-tailed test at 0.05 significance level
critical_t = t.ppf(0.975, df)

print(f'Critical t-value: {critical_t}')

import pandas as pd
from scipy.stats import wilcoxon

# Replace 'pre_fes.xlsx' and 'post_fes.xlsx' with your actual file names
pre_fes_file = 'cut_data_pre02_r_1stp1fcp_norm_1.xlsx'
post_fes_file = 'cut_data_post02_l_1spt1fcp_norm_4.xlsx'

# Read the Excel files into DataFrames
pre_fes_df = pd.read_excel(pre_fes_file, sheet_name='tan_data')
post_fes_df = pd.read_excel(post_fes_file, sheet_name='tan_data')

# Assuming your columns are named 'Left_Tangent' and 'Right_Tangent'
left_tangent_pre = pre_fes_df['Left_tangent'].dropna().to_numpy()
right_tangent_pre = pre_fes_df['Right_tangent'].dropna().to_numpy()

left_tangent_post = post_fes_df['Left_tangent'].dropna().to_numpy()
right_tangent_post = post_fes_df['Right_tangent'].dropna().to_numpy()

# Ensure the lengths are equal by truncating the longer sequences for both sides
max_length = min(len(left_tangent_pre), len(left_tangent_post), len(right_tangent_pre), len(right_tangent_post))

left_tangent_pre_truncated = left_tangent_pre[:max_length]
left_tangent_post_truncated = left_tangent_post[:max_length]

right_tangent_pre_truncated = right_tangent_pre[:max_length]
right_tangent_post_truncated = right_tangent_post[:max_length]

# Perform Wilcoxon signed-rank tests
statistic_left, p_value_left = wilcoxon(left_tangent_pre_truncated, left_tangent_post_truncated)
statistic_right, p_value_right = wilcoxon(right_tangent_pre_truncated, right_tangent_post_truncated)

# Display the results
print(f'Left Tangent: Statistic={statistic_left}, p-value={p_value_left}')
print(f'Right Tangent: Statistic={statistic_right}, p-value={p_value_right}')

# Interpret the results
if p_value_left < 0.05:
    print('There is a difference in the Left Tangent.')
else:
    print('No difference in the Left Tangent.')

if p_value_right < 0.05:
    print('There is a  difference in the Right Tangent.')
else:
    print('No difference in the Right Tangent.')